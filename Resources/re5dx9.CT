<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="31">
  <CheatEntries>
    <CheatEntry>
      <ID>84</ID>
      <Description>"Standalone"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>85</ID>
          <Description>"General"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>10</ID>
              <Description>"Infinite Ammo"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-16
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(inf,re5dx9.exe,8B 41 08 2B 44 24 08) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[ecx+08]
  //sub eax,[esp+08]
  nop
  jmp return

inf:
  jmp newmem
  nop 2
return:
registersymbol(inf)

[DISABLE]

inf:
  db 8B 41 08 2B 44 24 08

unregistersymbol(inf)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+84B8F8

"re5dx9.exe"+84B8E0: 8B 40 1C           -  mov eax,[eax+1C]
"re5dx9.exe"+84B8E3: 89 44 24 04        -  mov [esp+04],eax
"re5dx9.exe"+84B8E7: E9 04 FD FF FF     -  jmp re5dx9.exe+84B5F0
"re5dx9.exe"+84B8EC: CC                 -  int 3 
"re5dx9.exe"+84B8ED: CC                 -  int 3 
"re5dx9.exe"+84B8EE: CC                 -  int 3 
"re5dx9.exe"+84B8EF: CC                 -  int 3 
"re5dx9.exe"+84B8F0: 8B 4C 24 04        -  mov ecx,[esp+04]
"re5dx9.exe"+84B8F4: 85 C9              -  test ecx,ecx
"re5dx9.exe"+84B8F6: 74 0A              -  je re5dx9.exe+84B902
// ---------- INJECTING HERE ----------
"re5dx9.exe"+84B8F8: 8B 41 08           -  mov eax,[ecx+08]
"re5dx9.exe"+84B8FB: 2B 44 24 08        -  sub eax,[esp+08]
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+84B8FF: 89 41 08           -  mov [ecx+08],eax
"re5dx9.exe"+84B902: 33 C0              -  xor eax,eax
"re5dx9.exe"+84B904: C2 08 00           -  ret 0008
"re5dx9.exe"+84B907: CC                 -  int 3 
"re5dx9.exe"+84B908: CC                 -  int 3 
"re5dx9.exe"+84B909: CC                 -  int 3 
"re5dx9.exe"+84B90A: CC                 -  int 3 
"re5dx9.exe"+84B90B: CC                 -  int 3 
"re5dx9.exe"+84B90C: CC                 -  int 3 
"re5dx9.exe"+84B90D: CC                 -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>34</ID>
              <Description>"Infinite Reserve Ammo"</Description>
              <LastState/>
              <Color>0000FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,29 6E 08 5F 5E) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //sub [esi+08],ebp
  mov [esi+08],#999
  pop edi
  pop esi
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 29 6E 08 5F 5E

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+84D3DB

"re5dx9.exe"+84D3C1: 5E                    -  pop esi
"re5dx9.exe"+84D3C2: 8B C5                 -  mov eax,ebp
"re5dx9.exe"+84D3C4: 5D                    -  pop ebp
"re5dx9.exe"+84D3C5: 5B                    -  pop ebx
"re5dx9.exe"+84D3C6: 83 C4 64              -  add esp,64
"re5dx9.exe"+84D3C9: C2 08 00              -  ret 0008
"re5dx9.exe"+84D3CC: 8D 04 40              -  lea eax,[eax+eax*2]
"re5dx9.exe"+84D3CF: C1 E0 04              -  shl eax,04
"re5dx9.exe"+84D3D2: 8D 44 08 04           -  lea eax,[eax+ecx+04]
"re5dx9.exe"+84D3D6: E9 F7 FE FF FF        -  jmp re5dx9.exe+84D2D2
// ---------- INJECTING HERE ----------
"re5dx9.exe"+84D3DB: 29 6E 08              -  sub [esi+08],ebp
"re5dx9.exe"+84D3DE: 5F                    -  pop edi
"re5dx9.exe"+84D3DF: 5E                    -  pop esi
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+84D3E0: 5D                    -  pop ebp
"re5dx9.exe"+84D3E1: 33 C0                 -  xor eax,eax
"re5dx9.exe"+84D3E3: 5B                    -  pop ebx
"re5dx9.exe"+84D3E4: 83 C4 64              -  add esp,64
"re5dx9.exe"+84D3E7: C2 08 00              -  ret 0008
"re5dx9.exe"+84D3EA: CC                    -  int 3 
"re5dx9.exe"+84D3EB: CC                    -  int 3 
"re5dx9.exe"+84D3EC: CC                    -  int 3 
"re5dx9.exe"+84D3ED: CC                    -  int 3 
"re5dx9.exe"+84D3EE: CC                    -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Infinite Money"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,2B C2 89 81 88 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //sub eax,edx
  mov eax, #999999
  mov [ecx+00000188],eax
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 2B C2 89 81 88 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+8EDF19

"re5dx9.exe"+8EDEF6: 89 81 88 01 00 00     -  mov [ecx+00000188],eax
"re5dx9.exe"+8EDEFC: C2 04 00              -  ret 0004
"re5dx9.exe"+8EDEFF: CC                    -  int 3 
"re5dx9.exe"+8EDF00: 8B 81 88 01 00 00     -  mov eax,[ecx+00000188]
"re5dx9.exe"+8EDF06: 8B 54 24 04           -  mov edx,[esp+04]
"re5dx9.exe"+8EDF0A: 3B C2                 -  cmp eax,edx
"re5dx9.exe"+8EDF0C: 73 0B                 -  jae re5dx9.exe+8EDF19
"re5dx9.exe"+8EDF0E: 33 C0                 -  xor eax,eax
"re5dx9.exe"+8EDF10: 89 81 88 01 00 00     -  mov [ecx+00000188],eax
"re5dx9.exe"+8EDF16: C2 04 00              -  ret 0004
// ---------- INJECTING HERE ----------
"re5dx9.exe"+8EDF19: 2B C2                 -  sub eax,edx
"re5dx9.exe"+8EDF1B: 89 81 88 01 00 00     -  mov [ecx+00000188],eax
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+8EDF21: C2 04 00              -  ret 0004
"re5dx9.exe"+8EDF24: CC                    -  int 3 
"re5dx9.exe"+8EDF25: CC                    -  int 3 
"re5dx9.exe"+8EDF26: CC                    -  int 3 
"re5dx9.exe"+8EDF27: CC                    -  int 3 
"re5dx9.exe"+8EDF28: CC                    -  int 3 
"re5dx9.exe"+8EDF29: CC                    -  int 3 
"re5dx9.exe"+8EDF2A: CC                    -  int 3 
"re5dx9.exe"+8EDF2B: CC                    -  int 3 
"re5dx9.exe"+8EDF2C: CC                    -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>17</ID>
              <Description>"Infinite Grenades"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,89 41 08 7F 0E) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov [ecx+08],eax
  mov [ecx+08],#999
  jg re5dx9.exe+3EC420
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 41 08 7F 0E

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+3EC40D

"re5dx9.exe"+3EC3F3: 75 2B                    -  jne re5dx9.exe+3EC420
"re5dx9.exe"+3EC3F5: 8B 55 14                 -  mov edx,[ebp+14]
"re5dx9.exe"+3EC3F8: 52                       -  push edx
"re5dx9.exe"+3EC3F9: 8B CB                    -  mov ecx,ebx
"re5dx9.exe"+3EC3FB: E8 A0 F5 45 00           -  call re5dx9.exe+84B9A0
"re5dx9.exe"+3EC400: 84 C0                    -  test al,al
"re5dx9.exe"+3EC402: 75 1C                    -  jne re5dx9.exe+3EC420
"re5dx9.exe"+3EC404: 8B 44 24 14              -  mov eax,[esp+14]
"re5dx9.exe"+3EC408: 85 C0                    -  test eax,eax
"re5dx9.exe"+3EC40A: 8B 4D 14                 -  mov ecx,[ebp+14]
// ---------- INJECTING HERE ----------
"re5dx9.exe"+3EC40D: 89 41 08                 -  mov [ecx+08],eax
"re5dx9.exe"+3EC410: 7F 0E                    -  jg re5dx9.exe+3EC420
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+3EC412: 6A 01                    -  push 01
"re5dx9.exe"+3EC414: EB 05                    -  jmp re5dx9.exe+3EC41B
"re5dx9.exe"+3EC416: 8B 4D 14                 -  mov ecx,[ebp+14]
"re5dx9.exe"+3EC419: 8B F3                    -  mov esi,ebx
"re5dx9.exe"+3EC41B: E8 D0 F7 45 00           -  call re5dx9.exe+84BBF0
"re5dx9.exe"+3EC420: 85 F6                    -  test esi,esi
"re5dx9.exe"+3EC422: 0F 84 58 05 00 00        -  je re5dx9.exe+3EC980
"re5dx9.exe"+3EC428: F6 05 B0 2A 1A 01 01     -  test byte ptr [re5dx9.exe+DA2AB0],01
"re5dx9.exe"+3EC42F: 0F 57 C0                 -  xorps xmm0,xmm0
"re5dx9.exe"+3EC432: 75 27                    -  jne re5dx9.exe+3EC45B
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Infinite HP"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,66 29 8E 64 13 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //sub [esi+00001364],cx
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 29 8E 64 13 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+77CB40

"re5dx9.exe"+77CB29: 5E                          -  pop esi
"re5dx9.exe"+77CB2A: C2 04 00                    -  ret 0004
"re5dx9.exe"+77CB2D: CC                          -  int 3 
"re5dx9.exe"+77CB2E: CC                          -  int 3 
"re5dx9.exe"+77CB2F: CC                          -  int 3 
"re5dx9.exe"+77CB30: 56                          -  push esi
"re5dx9.exe"+77CB31: 8B F1                       -  mov esi,ecx
"re5dx9.exe"+77CB33: 66 8B 4C 24 08              -  mov cx,[esp+08]
"re5dx9.exe"+77CB38: 57                          -  push edi
"re5dx9.exe"+77CB39: 0F BF BE 64 13 00 00        -  movsx edi,word ptr [esi+00001364]
// ---------- INJECTING HERE ----------
"re5dx9.exe"+77CB40: 66 29 8E 64 13 00 00        -  sub [esi+00001364],cx
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+77CB47: 0F B7 86 64 13 00 00        -  movzx eax,word ptr [esi+00001364]
"re5dx9.exe"+77CB4E: 66 85 C0                    -  test ax,ax
"re5dx9.exe"+77CB51: 7D 09                       -  jnl re5dx9.exe+77CB5C
"re5dx9.exe"+77CB53: 66 C7 86 64 13 00 00 00 00  -  mov word ptr [esi+00001364],0000
"re5dx9.exe"+77CB5C: 0F B7 86 66 13 00 00        -  movzx eax,word ptr [esi+00001366]
"re5dx9.exe"+77CB63: 66 39 86 64 13 00 00        -  cmp [esi+00001364],ax
"re5dx9.exe"+77CB6A: 7E 07                       -  jle re5dx9.exe+77CB73
"re5dx9.exe"+77CB6C: 66 89 86 64 13 00 00        -  mov [esi+00001364],ax
"re5dx9.exe"+77CB73: 0F BF C1                    -  movsx eax,cx
"re5dx9.exe"+77CB76: 57                          -  push edi
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>31</ID>
              <Description>"Infinite Eggs"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,89 71 08 8B 44 24 1C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //mov [ecx+08],esi
  mov eax,[esp+1C]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 71 08 8B 44 24 1C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+3EB64B

"re5dx9.exe"+3EB629: 8B 44 24 18              -  mov eax,[esp+18]
"re5dx9.exe"+3EB62D: 8B 4C 24 20              -  mov ecx,[esp+20]
"re5dx9.exe"+3EB631: 50                       -  push eax
"re5dx9.exe"+3EB632: E8 D9 02 46 00           -  call re5dx9.exe+84B910
"re5dx9.exe"+3EB637: 84 C0                    -  test al,al
"re5dx9.exe"+3EB639: 75 13                    -  jne re5dx9.exe+3EB64E
"re5dx9.exe"+3EB63B: 85 F6                    -  test esi,esi
"re5dx9.exe"+3EB63D: 7F 08                    -  jg re5dx9.exe+3EB647
"re5dx9.exe"+3EB63F: C7 44 24 1C 00 00 00 00  -  mov [esp+1C],00000000
"re5dx9.exe"+3EB647: 8B 4C 24 18              -  mov ecx,[esp+18]
// ---------- INJECTING HERE ----------
"re5dx9.exe"+3EB64B: 89 71 08                 -  mov [ecx+08],esi
"re5dx9.exe"+3EB64E: 8B 44 24 1C              -  mov eax,[esp+1C]
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+3EB652: 5B                       -  pop ebx
"re5dx9.exe"+3EB653: 5F                       -  pop edi
"re5dx9.exe"+3EB654: 5E                       -  pop esi
"re5dx9.exe"+3EB655: 5D                       -  pop ebp
"re5dx9.exe"+3EB656: 83 C4 14                 -  add esp,14
"re5dx9.exe"+3EB659: C2 10 00                 -  ret 0010
"re5dx9.exe"+3EB65C: CC                       -  int 3 
"re5dx9.exe"+3EB65D: CC                       -  int 3 
"re5dx9.exe"+3EB65E: CC                       -  int 3 
"re5dx9.exe"+3EB65F: CC                       -  int 3 
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"Mercenary Game Mode"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>42</ID>
              <Description>"99999 Points/kill (Mercenary)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,01 94 08 B4 06 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add [eax+ecx+000006B4],#99999
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 01 94 08 B4 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+322379

"re5dx9.exe"+322354: 83 C1 08                    -  add ecx,08
"re5dx9.exe"+322357: 57                          -  push edi
"re5dx9.exe"+322358: 51                          -  push ecx
"re5dx9.exe"+322359: 89 4C 24 14                 -  mov [esp+14],ecx
"re5dx9.exe"+32235D: FF 15 00 91 F4 00           -  call dword ptr [re5dx9.exe+B49100]
"re5dx9.exe"+322363: A1 A8 43 22 01              -  mov eax,[re5dx9.exe+E243A8]
"re5dx9.exe"+322368: 8B 88 2C 04 01 00           -  mov ecx,[eax+0001042C]
"re5dx9.exe"+32236E: 8B 44 24 18                 -  mov eax,[esp+18]
"re5dx9.exe"+322372: 8B 54 24 1C                 -  mov edx,[esp+1C]
"re5dx9.exe"+322376: C1 E0 06                    -  shl eax,06
// ---------- INJECTING HERE ----------
"re5dx9.exe"+322379: 01 94 08 B4 06 00 00        -  add [eax+ecx+000006B4],edx
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+322380: 8B 0D A8 43 22 01           -  mov ecx,[re5dx9.exe+E243A8]
"re5dx9.exe"+322386: 8B 89 2C 04 01 00           -  mov ecx,[ecx+0001042C]
"re5dx9.exe"+32238C: BB 01 00 00 00              -  mov ebx,00000001
"re5dx9.exe"+322391: 01 9C 08 90 06 00 00        -  add [eax+ecx+00000690],ebx
"re5dx9.exe"+322398: 8B 15 A8 43 22 01           -  mov edx,[re5dx9.exe+E243A8]
"re5dx9.exe"+32239E: 8B 8A 2C 04 01 00           -  mov ecx,[edx+0001042C]
"re5dx9.exe"+3223A4: 01 9C 08 98 06 00 00        -  add [eax+ecx+00000698],ebx
"re5dx9.exe"+3223AB: 8B 0D A8 43 22 01           -  mov ecx,[re5dx9.exe+E243A8]
"re5dx9.exe"+3223B1: 8B 91 2C 04 01 00           -  mov edx,[ecx+0001042C]
"re5dx9.exe"+3223B7: F3 0F 10 05 4C CB 0C 01     -  movss xmm0,[re5dx9.exe+CCCB4C]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>38</ID>
              <Description>"Freeze Mercenary Timer"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,F3 0F 11 87 DC 04 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //movss [edi+000004DC],xmm0
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 87 DC 04 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+31CCBF

"re5dx9.exe"+31CC94: 5F                             -  pop edi
"re5dx9.exe"+31CC95: C2 04 00                       -  ret 0004
"re5dx9.exe"+31CC98: F3 0F 10 87 DC 04 00 00        -  movss xmm0,[edi+000004DC]
"re5dx9.exe"+31CCA0: F3 0F 10 54 24 08              -  movss xmm2,[esp+08]
"re5dx9.exe"+31CCA6: 0F 57 C9                       -  xorps xmm1,xmm1
"re5dx9.exe"+31CCA9: F3 0F 5C C2                    -  subss xmm0,xmm2
"re5dx9.exe"+31CCAD: 0F 2F C8                       -  comiss xmm1,xmm0
"re5dx9.exe"+31CCB0: 72 0D                          -  jb re5dx9.exe+31CCBF
"re5dx9.exe"+31CCB2: 0F 28 C1                       -  movaps xmm0,xmm1
"re5dx9.exe"+31CCB5: C7 87 D4 04 00 00 01 00 00 00  -  mov [edi+000004D4],00000001
// ---------- INJECTING HERE ----------
"re5dx9.exe"+31CCBF: F3 0F 11 87 DC 04 00 00        -  movss [edi+000004DC],xmm0
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+31CCC7: A1 A8 43 22 01                 -  mov eax,[re5dx9.exe+E243A8]
"re5dx9.exe"+31CCCC: 8B 88 2C 04 01 00              -  mov ecx,[eax+0001042C]
"re5dx9.exe"+31CCD2: 05 2C 04 01 00                 -  add eax,0001042C
"re5dx9.exe"+31CCD7: 80 B9 6C 05 00 00 00           -  cmp byte ptr [ecx+0000056C],00
"re5dx9.exe"+31CCDE: 75 08                          -  jne re5dx9.exe+31CCE8
"re5dx9.exe"+31CCE0: F3 0F 11 81 7C 06 00 00        -  movss [ecx+0000067C],xmm0
"re5dx9.exe"+31CCE8: 8B 00                          -  mov eax,[eax]
"re5dx9.exe"+31CCEA: 8B 48 58                       -  mov ecx,[eax+58]
"re5dx9.exe"+31CCED: 83 F9 02                       -  cmp ecx,02
"re5dx9.exe"+31CCF0: 74 05                          -  je re5dx9.exe+31CCF7
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>51</ID>
              <Description>"Freeze Combo Timer"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2020-06-19
  Author : Alex Phu

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,re5dx9.exe,F3 0F 11 84 31 A0 06 00 00 5F) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  //movss [ecx+esi+000006A0],xmm0
  mov [ecx+esi+000006A0],(float)10
  jmp return

INJECT:
  jmp newmem
  nop 4
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 84 31 A0 06 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+321A31

"re5dx9.exe"+321A06: F3 0F 11 44 24 0C           -  movss [esp+0C],xmm0
"re5dx9.exe"+321A0C: 75 18                       -  jne re5dx9.exe+321A26
"re5dx9.exe"+321A0E: 57                          -  push edi
"re5dx9.exe"+321A0F: E8 CC B5 FF FF              -  call re5dx9.exe+31CFE0
"re5dx9.exe"+321A14: 8B 0D 20 9F 23 01           -  mov ecx,[re5dx9.exe+E39F20]
"re5dx9.exe"+321A1A: 57                          -  push edi
"re5dx9.exe"+321A1B: E8 70 3E 07 00              -  call re5dx9.exe+395890
"re5dx9.exe"+321A20: F3 0F 10 44 24 0C           -  movss xmm0,[esp+0C]
"re5dx9.exe"+321A26: A1 A8 43 22 01              -  mov eax,[re5dx9.exe+E243A8]
"re5dx9.exe"+321A2B: 8B 88 2C 04 01 00           -  mov ecx,[eax+0001042C]
// ---------- INJECTING HERE ----------
"re5dx9.exe"+321A31: F3 0F 11 84 31 A0 06 00 00  -  movss [ecx+esi+000006A0],xmm0
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+321A3A: 5F                          -  pop edi
"re5dx9.exe"+321A3B: 5E                          -  pop esi
"re5dx9.exe"+321A3C: C2 08 00                    -  ret 0008
"re5dx9.exe"+321A3F: CC                          -  int 3 
"re5dx9.exe"+321A40: 55                          -  push ebp
"re5dx9.exe"+321A41: 8B EC                       -  mov ebp,esp
"re5dx9.exe"+321A43: 83 E4 F0                    -  and esp,-10
"re5dx9.exe"+321A46: 83 EC 14                    -  sub esp,14
"re5dx9.exe"+321A49: 53                          -  push ebx
"re5dx9.exe"+321A4A: 56                          -  push esi
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>86</ID>
      <Description>"For c#"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>87</ID>
          <Description>"General"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>61</ID>
              <Description>"Inf Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(infinite_ammo,re5dx9.exe,2B 44 24 08 89 41 08) // should be unique
registersymbol(infinite_ammo)

infinite_ammo:
 db 90 90 90 90

[DISABLE]

infinite_ammo:
  db 2B 44 24 08

unregistersymbol(infinite_ammo)


{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+84B8FB

"re5dx9.exe"+84B8E3: 89 44 24 04        -  mov [esp+04],eax
"re5dx9.exe"+84B8E7: E9 04 FD FF FF     -  jmp re5dx9.exe+84B5F0
"re5dx9.exe"+84B8EC: CC                 -  int 3 
"re5dx9.exe"+84B8ED: CC                 -  int 3 
"re5dx9.exe"+84B8EE: CC                 -  int 3 
"re5dx9.exe"+84B8EF: CC                 -  int 3 
"re5dx9.exe"+84B8F0: 8B 4C 24 04        -  mov ecx,[esp+04]
"re5dx9.exe"+84B8F4: 85 C9              -  test ecx,ecx
"re5dx9.exe"+84B8F6: 74 0A              -  je re5dx9.exe+84B902
"re5dx9.exe"+84B8F8: 8B 41 08           -  mov eax,[ecx+08]
// ---------- INJECTING HERE ----------
"re5dx9.exe"+84B8FB: 2B 44 24 08        -  sub eax,[esp+08]
"re5dx9.exe"+84B8FF: 89 41 08           -  mov [ecx+08],eax
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+84B902: 33 C0              -  xor eax,eax
"re5dx9.exe"+84B904: C2 08 00           -  ret 0008
"re5dx9.exe"+84B907: CC                 -  int 3 
"re5dx9.exe"+84B908: CC                 -  int 3 
"re5dx9.exe"+84B909: CC                 -  int 3 
"re5dx9.exe"+84B90A: CC                 -  int 3 
"re5dx9.exe"+84B90B: CC                 -  int 3 
"re5dx9.exe"+84B90C: CC                 -  int 3 
"re5dx9.exe"+84B90D: CC                 -  int 3 
"re5dx9.exe"+84B90E: CC                 -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>64</ID>
              <Description>"Freeze Reserve Ammo (Problem if player reloads with empty mag)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(inf_reserve,re5dx9.exe,29 6E 08 5F 5E) // should be unique

inf_reserve:
  nop
  nop
  nop
  pop edi
  pop esi

registersymbol(inf_reserve)

[DISABLE]

inf_reserve:
  db 29 6E 08 5F 5E

unregistersymbol(inf_reserve)


{
// ORIGINAL CODE - INJECTION POINT: "re5dx9.exe"+84D3DB

"re5dx9.exe"+84D3C1: 5E                    -  pop esi
"re5dx9.exe"+84D3C2: 8B C5                 -  mov eax,ebp
"re5dx9.exe"+84D3C4: 5D                    -  pop ebp
"re5dx9.exe"+84D3C5: 5B                    -  pop ebx
"re5dx9.exe"+84D3C6: 83 C4 64              -  add esp,64
"re5dx9.exe"+84D3C9: C2 08 00              -  ret 0008
"re5dx9.exe"+84D3CC: 8D 04 40              -  lea eax,[eax+eax*2]
"re5dx9.exe"+84D3CF: C1 E0 04              -  shl eax,04
"re5dx9.exe"+84D3D2: 8D 44 08 04           -  lea eax,[eax+ecx+04]
"re5dx9.exe"+84D3D6: E9 F7 FE FF FF        -  jmp re5dx9.exe+84D2D2
// ---------- INJECTING HERE ----------
"re5dx9.exe"+84D3DB: 29 6E 08              -  sub [esi+08],ebp
"re5dx9.exe"+84D3DE: 5F                    -  pop edi
"re5dx9.exe"+84D3DF: 5E                    -  pop esi
// ---------- DONE INJECTING  ----------
"re5dx9.exe"+84D3E0: 5D                    -  pop ebp
"re5dx9.exe"+84D3E1: 33 C0                 -  xor eax,eax
"re5dx9.exe"+84D3E3: 5B                    -  pop ebx
"re5dx9.exe"+84D3E4: 83 C4 64              -  add esp,64
"re5dx9.exe"+84D3E7: C2 08 00              -  ret 0008
"re5dx9.exe"+84D3EA: CC                    -  int 3 
"re5dx9.exe"+84D3EB: CC                    -  int 3 
"re5dx9.exe"+84D3EC: CC                    -  int 3 
"re5dx9.exe"+84D3ED: CC                    -  int 3 
"re5dx9.exe"+84D3EE: CC                    -  int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>65</ID>
              <Description>"Inf Grenades"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+3EC402:
  jmp 007EC420



 
 
[DISABLE]
re5dx9.exe+3EC402:
  jne 007EC420
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"God mode"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+77CB40:
  nop
  nop
  nop
  nop
  nop
  nop
  nop

[DISABLE]
re5dx9.exe+77CB40:
  sub [esi+00001364],cx

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"Infinite Eggs (to eat)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+3EB64B:
  nop
  nop
  nop

[DISABLE]
re5dx9.exe+3EB64B:
  mov [ecx+08],esi

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"Infinite Proxy Bombs"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+3EBC3E:
  jmp 007EBC59

[DISABLE]
re5dx9.exe+3EBC3E:
  jne 007EBC59
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>83</ID>
              <Description>"Freeze Money"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+8EDF19:
  nop
  nop

[DISABLE]
re5dx9.exe+8EDF19:
  sub eax,edx

</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"Mercenary Game Mode"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>89</ID>
              <Description>"Freeze Combo Timer"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
re5dx9.exe+321A31:
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop

[DISABLE]
re5dx9.exe+321A31:
  movss [ecx+esi+000006A0],xmm0

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>91</ID>
              <Description>"Freeze Countdown Timer"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
"re5dx9.exe"+31CCBF:
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop


[DISABLE]
"re5dx9.exe"+31CCBF:
  movss [edi+000004DC],xmm0
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Other"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>76</ID>
              <Description>"BaseAddress of Module"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>getAddress('re5dx9.exe')</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"End of module"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>getAddress('re5dx9.exe') + getModuleSize('re5dx9.exe')</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>80</ID>
              <Description>"Money Pointer"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>"re5dx9.exe"+00DA23D8</Address>
              <Offsets>
                <Offset>1C0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>98</ID>
              <Description>"Score Pointer"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>re5dx9.exe+E243A8</Address>
              <Offsets>
                <Offset>6B4</Offset>
                <Offset>1042C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry Color="20000000">
      <Description>Change of sub eax,[esp+08]</Description>
      <AddressString>re5dx9.exe+84B8FB</AddressString>
      <Before>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov eax,[ecx+08]</Description>
      <AddressString>re5dx9.exe+84B8F8</AddressString>
      <Before>
        <Byte>04</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>2B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of sub [esi+08],ebp</Description>
      <AddressString>re5dx9.exe+84D3DB</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>F7</Byte>
        <Byte>FE</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>29</Byte>
        <Byte>6E</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>5D</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of je re5dx9.exe+A63365</Description>
      <AddressString>re5dx9.exe+A6335D</AddressString>
      <Before>
        <Byte>E2</Byte>
        <Byte>03</Byte>
        <Byte>C1</Byte>
        <Byte>E9</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>06</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>AB</Byte>
        <Byte>85</Byte>
        <Byte>D2</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+08],eax</Description>
      <AddressString>re5dx9.exe+84D3AA</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>1C</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>7E</Byte>
        <Byte>2F</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of xor eax,eax</Description>
      <AddressString>re5dx9.exe+84D385</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>7B</Byte>
        <Byte>5F</Byte>
        <Byte>21</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>2B</Byte>
        <Byte>EB</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+2C],eax</Description>
      <AddressString>re5dx9.exe+84D3A7</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>7E</Byte>
        <Byte>2F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+1C],eax</Description>
      <AddressString>re5dx9.exe+84D3A4</AddressString>
      <Before>
        <Byte>18</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+14],eax</Description>
      <AddressString>re5dx9.exe+84D39A</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>0D</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+10],eax</Description>
      <AddressString>re5dx9.exe+84D397</AddressString>
      <Before>
        <Byte>89</Byte>
        <Byte>07</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>C7</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [esi+0C],eax</Description>
      <AddressString>re5dx9.exe+84D394</AddressString>
      <Before>
        <Byte>46</Byte>
        <Byte>29</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [edi],eax</Description>
      <AddressString>re5dx9.exe+84D392</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>C6</Byte>
        <Byte>46</Byte>
        <Byte>29</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov byte ptr [esi+29],00</Description>
      <AddressString>re5dx9.exe+84D38E</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
        <Byte>3B</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>46</Byte>
        <Byte>29</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>07</Byte>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of cmp ebp,eax</Description>
      <AddressString>re5dx9.exe+84D38C</AddressString>
      <Before>
        <Byte>2B</Byte>
        <Byte>EB</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>0C</Byte>
      </Before>
      <Actual>
        <Byte>3B</Byte>
        <Byte>E8</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>46</Byte>
        <Byte>29</Byte>
        <Byte>00</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of add edi,01</Description>
      <AddressString>re5dx9.exe+A63367</AddressString>
      <Before>
        <Byte>D2</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
        <Byte>88</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>C7</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>EA</Byte>
        <Byte>01</Byte>
        <Byte>75</Byte>
        <Byte>F6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of sub edx,01</Description>
      <AddressString>re5dx9.exe+A6336A</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>07</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>EA</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>75</Byte>
        <Byte>F6</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of jne re5dx9.exe+A63365</Description>
      <AddressString>re5dx9.exe+A6336D</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>F6</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
        <Byte>5F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [edi],al</Description>
      <AddressString>re5dx9.exe+A63365</AddressString>
      <Before>
        <Byte>AB</Byte>
        <Byte>85</Byte>
        <Byte>D2</Byte>
        <Byte>74</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>88</Byte>
        <Byte>07</Byte>
      </Actual>
      <After>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov eax,[esp+08]</Description>
      <AddressString>re5dx9.exe+A6336F</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>EA</Byte>
        <Byte>01</Byte>
        <Byte>75</Byte>
        <Byte>F6</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [ecx+08],eax</Description>
      <AddressString>re5dx9.exe+3EC40D</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>7F</Byte>
        <Byte>0E</Byte>
        <Byte>6A</Byte>
        <Byte>01</Byte>
        <Byte>EB</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of test eax,eax</Description>
      <AddressString>re5dx9.exe+3EC408</AddressString>
      <Before>
        <Byte>1C</Byte>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>14</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of sub [esi+00001364],cx</Description>
      <AddressString>re5dx9.exe+77CB40</AddressString>
      <Before>
        <Byte>BE</Byte>
        <Byte>64</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>66</Byte>
        <Byte>29</Byte>
        <Byte>8E</Byte>
        <Byte>64</Byte>
        <Byte>13</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>B7</Byte>
        <Byte>86</Byte>
        <Byte>64</Byte>
        <Byte>13</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of mov [ecx+08],esi</Description>
      <AddressString>re5dx9.exe+3EB64B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>71</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>1C</Byte>
        <Byte>5B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of sub eax,edx</Description>
      <AddressString>re5dx9.exe+8EDF19</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>C2</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>2B</Byte>
        <Byte>C2</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>88</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [ecx+esi+000006A0],xmm0</Description>
      <AddressString>re5dx9.exe+321A31</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>2C</Byte>
        <Byte>04</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>84</Byte>
        <Byte>31</Byte>
        <Byte>A0</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>5F</Byte>
        <Byte>5E</Byte>
        <Byte>C2</Byte>
        <Byte>08</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry Color="20000000">
      <Description>Change of movss [edi+000004DC],xmm0</Description>
      <AddressString>re5dx9.exe+31CCBF</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>DC</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>A1</Byte>
        <Byte>A8</Byte>
        <Byte>43</Byte>
        <Byte>22</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>Info about this table:
Addresses:
0554043C
05530010
re5dx9.exe+E243A8
Offsets:
6B4
1042C
</Comments>
</CheatTable>
